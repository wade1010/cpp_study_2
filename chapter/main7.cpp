#include "iostream"
using namespace std;

void test()
{
    int a[5] = {1, 2, 3, 4, 5};
    //用数组表示法操作数组
    for (int i = 0; i < 5; i++)
    {
        cout << "a[" << i << "]=" << a[i] << endl;
    }
    //骚操作 1
    cout << a[2] << endl;       // 3
    cout << &a[2] << endl;      // 0x61fdd8  是一个地址
    cout << (&a[2]) << endl;    // 0x61fdd8  是一个地址
    cout << (&a[2])[0] << endl; // 3   第二个元素的地址[0] 被解释为 *(第二个元素地址+0)
    cout << (&a[2])[1] << endl; // 4   第二个元素的地址[1] 被解释为 *(第二个元素地址+1)
    cout << (&a[2])[2] << endl; // 5   第二个元素的地址[2] 被解释为 *(第二个元素地址+2)

    //骚操作 2
    char ch[20];          // char占1个字节 20个元素就是20个字节
    int *cp = (int *)&ch; // int占4个字节 20个字节也就是能放5个int元素
    for (int i = 0; i < 5; i++)
    {
        cp[i] = i + 100;
    }
    for (int i = 0; i < 5; i++)
    {
        cout << "*(cp+" << i << ") value is " << *(cp + i) << endl;
    }
    //上面代码,内存空间本质就是一块存储空间,对C++来说,操作内存的时候,变量的数据类型决定了操作内存的方法,
    //一般来说声明变量的时候,指定数据类型就是指定了操作内存的方法,但是我们也可以中途修改操作内存的方法.
    //上面的例子,声明ch数组的时候,申请了一块20字节的内存,本来打算存放字符型数据,后来,把这20个字节挪用了,改为
    //存放整型数据,这种需求完全合理
    //上面实例,可以让我们对内存/指针和数组有更深的认识
}
int main()
{
    test();
    return 0;
}